Corre√ß√£o de Deploy - Erro de Array no Banco de Dados
Problema Identificado

‚úÖ App funciona no preview (desenvolvimento)
‚ùå Deploy falha com erro 500 (produ√ß√£o)
üêõ Erro espec√≠fico: malformed array literal: "[8]" na linha 666 do routes.ts

Root Cause
O erro indica problema com arrays no PostgreSQL, provavelmente na query de estat√≠sticas do vendedor.
üîß Corre√ß√£o Necess√°ria
1. Localizar Problema no Arquivo routes.ts
Ir para server/routes.ts linha 666 e procurar por:

Queries que usam arrays
Campos JSON que podem conter arrays
Opera√ß√µes de stats/estat√≠sticas

2. Corrigir Query Problem√°tica
O erro sugere problema com format de array PostgreSQL. Provavelmente algo como:
typescript// ‚ùå PROBLEM√ÅTICO (formato incorreto)
const result = await db.query(`
  SELECT * FROM table WHERE array_field = $1
`, ['[8]']); // String com formato de array

// ‚úÖ CORRETO (array real ou JSON)
const result = await db.query(`
  SELECT * FROM table WHERE array_field = $1
`, [[8]]); // Array real

// OU usar JSON se for campo JSON
const result = await db.query(`
  SELECT * FROM table WHERE json_field::jsonb @> $1
`, [JSON.stringify([8])]);
3. Verifica√ß√£o Espec√≠fica
Procurar na linha 666 de routes.ts por:

stats (estat√≠sticas)
Array operations
JSON field queries
Queries relacionadas a storeId: 3

4. Poss√≠veis Corre√ß√µes
A. Se for campo JSON:
typescript// Em vez de passar array como string
WHERE json_field = '[8]'

// Usar operador JSON correto
WHERE json_field::jsonb @> '[8]'::jsonb
B. Se for array PostgreSQL:
typescript// Em vez de string
WHERE array_field = '[8]'

// Usar array real
WHERE array_field = ARRAY[8]
// OU
WHERE 8 = ANY(array_field)
C. Verificar diferen√ßas entre desenvolvimento e produ√ß√£o:
typescript// Adicionar logs para debug
console.log('üîç Query data type:', typeof arrayData);
console.log('üîç Query data value:', arrayData);

// Garantir formato correto antes da query
const formattedArray = Array.isArray(arrayData) 
  ? arrayData 
  : JSON.parse(arrayData);
üÜò Corre√ß√£o Emergencial
Op√ß√£o A: Comentar Query Problem√°tica
typescript// Comentar temporariamente a query que est√° falhando na linha 666
// para fazer deploy funcionar
try {
  // const result = await problematicQuery();
  const result = { fallback: 'data' }; // dados tempor√°rios
} catch (error) {
  console.error('Query error:', error);
  return defaultStatsData;
}
Op√ß√£o B: Detectar Ambiente
typescript// Tratamento diferente para produ√ß√£o vs desenvolvimento
const isProduction = process.env.NODE_ENV === 'production';

if (isProduction) {
  // L√≥gica simplificada para produ√ß√£o
  return await getSimpleStats(storeId);
} else {
  // L√≥gica completa para desenvolvimento
  return await getDetailedStats(storeId);
}
üìã Instru√ß√µes para IA:

Abrir server/routes.ts
Ir para linha 666 (onde est√° o erro)
Identificar a query problem√°tica com arrays
Corrigir formato do array/JSON conforme exemplos acima
Testar se deploy funciona ap√≥s corre√ß√£o
Reportar qual era o problema espec√≠fico

üéØ Objetivo:

‚úÖ Deploy funcionando sem erro 500
‚úÖ App acess√≠vel na URL de produ√ß√£o
‚úÖ Queries corrigidas para produ√ß√£o

‚ö†Ô∏è Nota Importante:
Este n√£o √© um problema das mudan√ßas de autentica√ß√£o, mas sim uma incompatibilidade de SQL entre desenvolvimento e produ√ß√£o.
Resultado Esperado:
Deploy funcionando corretamente com app acess√≠vel na URL p√∫blica do Replit.