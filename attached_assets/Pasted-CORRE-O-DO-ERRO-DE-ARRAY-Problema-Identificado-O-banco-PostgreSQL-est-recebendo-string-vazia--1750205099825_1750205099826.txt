CORRE√á√ÉO DO ERRO DE ARRAY
Problema Identificado
O banco PostgreSQL est√° recebendo "" (string vazia) quando espera um array. O erro est√° no campo tags que est√° sendo enviado como string vazia "" mas o banco espera um array.
Localiza√ß√£o do Erro

Arquivo: server/storage.ts linha 1668
Fun√ß√£o: createStore
Problema: Campo tags como string vazia sendo inserido em coluna de array

Solu√ß√£o Urgente
1Ô∏è‚É£ Corrigir o processamento do campo tags
No controller de stores, antes de enviar para storage:
typescript// Corrigir o campo tags - converter string vazia para array vazio
if (typeof storeData.tags === 'string') {
  if (storeData.tags.trim() === '') {
    storeData.tags = []; // Array vazio em vez de string vazia
  } else {
    // Se houver tags como string, converter para array
    storeData.tags = storeData.tags.split(',').map(tag => tag.trim());
  }
}

// Garantir que outros campos de array estejam corretos
if (!Array.isArray(storeData.categories)) {
  storeData.categories = [];
}

if (!Array.isArray(storeData.images)) {
  storeData.images = [];
}
2Ô∏è‚É£ Verificar o SQL no storage.ts
Arquivo: server/storage.ts linha ~1668
Na fun√ß√£o createStore, verificar se o SQL est√° tratando arrays corretamente:
sql-- O campo tags deve ser inserido como array PostgreSQL
INSERT INTO stores (name, description, category, tags, ...)
VALUES ($1, $2, $3, $4, ...)

-- Onde $4 deve ser um array como: ['tag1', 'tag2'] ou []
-- N√ÉO uma string como: ""
3Ô∏è‚É£ Logs para confirmar
Adicionar antes da inser√ß√£o no banco:
typescriptconsole.log('üîç [STORAGE] Dados antes da inser√ß√£o no BD:', {
  tags: storeData.tags,
  tagsType: typeof storeData.tags,
  tagsIsArray: Array.isArray(storeData.tags),
  categories: storeData.categories,
  categoriesType: typeof storeData.categories
});
Corre√ß√£o Imediata
O problema principal √©:

‚úÖ Frontend envia: tags: ""
‚ùå Banco espera: tags: []

Converter string vazia para array vazio antes da inser√ß√£o no banco resolver√° o problema.
Esta √© a √∫ltima barreira para criar a loja com sucesso!