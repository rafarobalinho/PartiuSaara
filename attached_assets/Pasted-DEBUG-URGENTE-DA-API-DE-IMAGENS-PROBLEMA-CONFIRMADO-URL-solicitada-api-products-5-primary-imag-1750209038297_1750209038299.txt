DEBUG URGENTE DA API DE IMAGENS
üî¥ PROBLEMA CONFIRMADO

URL solicitada: /api/products/5/primary-image ‚úÖ Correta
Imagem retornada: Produto 10 ‚ùå Incorreta
Conclus√£o: A API /api/products/5/primary-image est√° retornando dados do produto 10

DEBUG URGENTE NECESS√ÅRIO
1Ô∏è‚É£ Adicionar Logs Detalhados na API
Arquivo: server/controllers/image.controller.js
Na fun√ß√£o getProductPrimaryImage, adicionar logs ANTES e DEPOIS da query:
typescriptexport const getProductPrimaryImage = async (req, res) => {
  const productId = parseInt(req.params.id);
  
  console.log('üîç [IMAGE-DEBUG] ========== IN√çCIO ==========');
  console.log('üîç [IMAGE-DEBUG] URL solicitada:', req.originalUrl);
  console.log('üîç [IMAGE-DEBUG] Produto ID extra√≠do:', productId);
  console.log('üîç [IMAGE-DEBUG] Tipo do productId:', typeof productId);
  console.log('üîç [IMAGE-DEBUG] req.params:', req.params);
  
  // Sua query aqui...
  console.log('üîç [IMAGE-DEBUG] Executando query para produto:', productId);
  
  const imageResult = await pool.query(imageQuery, [productId]);
  
  console.log('üîç [IMAGE-DEBUG] Resultado da query:', {
    rowCount: imageResult.rows.length,
    firstRow: imageResult.rows[0],
    parametroUsado: productId
  });
  
  if (imageResult.rows.length > 0) {
    const imageData = imageResult.rows[0];
    console.log('üîç [IMAGE-DEBUG] Imagem encontrada:', {
      productIdSolicitado: productId,
      imageUrl: imageData.image_url,
      // Se sua query inclui product_id, adicione:
      productIdNaImagem: imageData.product_id || 'N/A'
    });
  }
  
  console.log('üîç [IMAGE-DEBUG] ========== FIM ==========');
  
  // ... resto da fun√ß√£o
};
2Ô∏è‚É£ Verificar a Query SQL
Mostrar a query exata que est√° sendo executada:
typescriptconst imageQuery = `
  SELECT 
    pi.id,
    pi.product_id,  -- IMPORTANTE: incluir este campo
    pi.image_url,
    pi.is_primary
  FROM product_images pi
  WHERE pi.product_id = $1 AND pi.is_primary = true
  ORDER BY pi.id DESC
  LIMIT 1
`;

console.log('üîç [IMAGE-DEBUG] Query SQL:', imageQuery);
console.log('üîç [IMAGE-DEBUG] Par√¢metro:', [productId]);
3Ô∏è‚É£ Testar Diretamente no Banco
Execute estas queries no banco para verificar:
sql-- Verificar produto 5:
SELECT 'PRODUTO 5' as debug, pi.id, pi.product_id, pi.image_url, pi.is_primary
FROM product_images pi 
WHERE pi.product_id = 5;

-- Verificar produto 10:
SELECT 'PRODUTO 10' as debug, pi.id, pi.product_id, pi.image_url, pi.is_primary  
FROM product_images pi 
WHERE pi.product_id = 10;

-- Verificar se h√° confus√£o:
SELECT 'TODAS PRIM√ÅRIAS' as debug, pi.id, pi.product_id, pi.image_url, pi.is_primary
FROM product_images pi 
WHERE pi.is_primary = true
ORDER BY pi.product_id;
4Ô∏è‚É£ Verificar Cache ou Problema de Estado
Adicionar header para evitar cache:
typescriptres.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');
res.setHeader('Pragma', 'no-cache');
res.setHeader('Expires', '0');
RESULTADO ESPERADO
Com esses logs, veremos exatamente:

Que par√¢metro est√° chegando na fun√ß√£o
Que resultado a query est√° retornando
Se h√° mistura de dados na tabela
Onde est√° o problema (query, dados, ou l√≥gica)

A√á√ÉO IMEDIATA
Execute uma requisi√ß√£o para /api/products/5/primary-image e compartilhe TODOS os logs que aparecerem no console do servidor.
Isso vai revelar exatamente onde est√° o bug!Tentar novamenteO Claude pode cometer erros. Confira sempre as respostas.Pesquisabeta Sonnet 4