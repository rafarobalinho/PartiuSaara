Precisamos exibir as imagens que já foram adicionadas nas pastas corretas. As imagens estão nos seguintes caminhos:

1. Primeira imagem: `/landing/sellers/photo-1441986300917-64674bd600d8.jpg`
2. Segunda imagem: `/landing/sellers/photo-1556740738-b6a63e27c4df.jpg`

Por favor, implemente a solução para exibir estas imagens na landing page /for-store-owners:

## 1. Criar um componente LandingImage simples

Crie um novo componente em `client/src/components/landing/LandingImage.tsx`:

```tsx
import React, { useState } from 'react';

interface LandingImageProps {
  src: string;
  alt: string;
  className?: string;
}

export function LandingImage({ src, alt, className = "" }: LandingImageProps) {
  const [hasError, setHasError] = useState(false);
  
  // Função para lidar com erros de carregamento
  const handleError = () => {
    console.error(`Erro ao carregar imagem: ${src}`);
    setHasError(true);
  };
  
  if (hasError) {
    return (
      <div className={`bg-gray-200 flex items-center justify-center ${className}`} style={{ minHeight: '200px' }}>
        <p className="text-gray-600">{alt || "Imagem não disponível"}</p>
      </div>
    );
  }
  
  return (
    <img 
      src={src} 
      alt={alt} 
      className={className}
      onError={handleError}
      loading="lazy"
    />
  );
}
2. Modificar a landing page para usar o componente
Localize o arquivo da landing page (provavelmente em /client/src/pages/landing/ForStoreOwners.tsx ou similar) e substitua as tags de imagem ou qualquer componente StaticImage pelo novo componente:
tsximport { LandingImage } from '../../components/landing/LandingImage';

// Substitua os elementos de imagem existentes:

// De:
<StaticImage 
  src="/landing/sellers/hero-banner.jpg"
  alt="Lojista gerenciando produtos" 
  className="w-full rounded"
/>

// Para:
<LandingImage 
  src="/landing/sellers/photo-1441986300917-64674bd600d8.jpg"
  alt="Lojista gerenciando produtos" 
  className="w-full rounded-lg shadow-lg"
/>

// E também para a segunda imagem:
<LandingImage 
  src="/landing/sellers/photo-1556740738-b6a63e27c4df.jpg"
  alt="Recursos para lojistas" 
  className="w-full rounded-lg shadow-lg"
/>
3. Solução alternativa: usar tags img diretamente
Se o componente ainda apresentar problemas, você pode tentar usar tags img diretamente no JSX:
tsx// Em vez de usar um componente, use a tag img normal:
<img 
  src="/landing/sellers/photo-1441986300917-64674bd600d8.jpg"
  alt="Lojista gerenciando produtos" 
  className="w-full rounded-lg shadow-lg"
  loading="lazy"
  onError={(e) => {
    console.error('Erro ao carregar imagem');
    e.currentTarget.onerror = null;
    e.currentTarget.src = '/placeholder-image.jpg';
  }}
/>
4. Verificar o fallback de imagens
Garanta que exista um placeholder para ser usado em caso de falha no carregamento:
tsx// No component LandingImage:
if (hasError) {
  return (
    <div className={`bg-gradient-to-r from-blue-100 to-indigo-100 flex items-center justify-center ${className}`} style={{ minHeight: '200px' }}>
      <p className="text-indigo-600 font-medium">{alt || "Imagem não disponível"}</p>
    </div>
  );
}