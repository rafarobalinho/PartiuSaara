CORREÇÃO CRÍTICA: Erro de React Suspense na Página Forgot Password

PROBLEMAS IDENTIFICADOS:
1. Context.Provider está suspendendo incorretamente
2. Componente fazendo operação síncrona que deveria usar startTransition
3. Erro ao navegar para /forgot-password

CORREÇÕES NECESSÁRIAS:

1. **CORRIGIR AuthProvider (auth-context.tsx):**
```typescript
import { startTransition } from 'react';

// Envolver TODAS as mudanças de estado em startTransition
const checkAuth = async () => {
  startTransition(() => {
    setIsLoading(true);
  });
  
  try {
    const response = await fetch('/api/auth/me');
    const user = response.ok ? await response.json() : null;
    
    startTransition(() => {
      setIsAuthenticated(!!user);
      setUser(user);
      setIsLoading(false);
    });
  } catch (error) {
    startTransition(() => {
      setIsAuthenticated(false);
      setUser(null);
      setIsLoading(false);
    });
  }
};

CORRIGIR navegação para forgot-password:

typescript// No componente de login, envolver navegação:
import { startTransition } from 'react';

const handleForgotPassword = () => {
  startTransition(() => {
    navigate('/forgot-password');
  });
};

// Ou se usando link simples:
<a 
  href="/forgot-password" 
  onClick={(e) => {
    e.preventDefault();
    startTransition(() => {
      window.location.href = '/forgot-password';
    });
  }}
>
  Esqueceu sua senha?
</a>

ADICIONAR Error Boundary em App.tsx:

typescriptimport React from 'react';

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true };
  }

  componentDidCatch(error, errorInfo) {
    console.error('Error caught by boundary:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return (
        <div className="min-h-screen flex items-center justify-center">
          <div className="text-center">
            <h2>Algo deu errado</h2>
            <button 
              onClick={() => window.location.reload()}
              className="mt-4 px-4 py-2 bg-blue-600 text-white rounded"
            >
              Recarregar Página
            </button>
          </div>
        </div>
      );
    }
    return this.props.children;
  }
}

// Envolver AuthProvider com ErrorBoundary:
function App() {
  return (
    <ErrorBoundary>
      <QueryClientProvider client={queryClient}>
        <AuthProvider>
          <UiProvider>
            <TooltipProvider>
              {/* resto do app */}
            </TooltipProvider>
          </UiProvider>
        </AuthProvider>
      </QueryClientProvider>
    </ErrorBoundary>
  );
}

VERIFICAR se página forgot-password existe:

Confirmar que /src/pages/ForgotPassword.tsx existe
Verificar se está na rota do router
Garantir que não há conflitos de rota