 Parece que estamos lidando com duas quest√µes distintas do Drizzle ORM agora. Vamos analis√°-las:

Erro 1: TypeError: notEq is not a function na p√°gina /seller/dashboard (ou rota /api/seller/stats)
Log do Erro:
‚ùå Erro nas consultas Drizzle: TypeError: notEq is not a function
    at Object.where (/home/runner/workspace/server/routes.ts:555:17)
O que significa: Este erro indica que voc√™ est√° tentando usar uma fun√ß√£o ou operador chamado notEq em uma cl√°usula where de uma consulta Drizzle no arquivo server/routes.ts (linha 555), mas o Drizzle n√£o reconhece notEq como uma fun√ß√£o v√°lida.
Causa Prov√°vel:
O operador para "n√£o igual" no Drizzle ORM √© geralmente ne (Not Equal).
Voc√™ pode ter digitado notEq por engano, ou ne (ou qualquer outro operador que voc√™ precise) n√£o foi importado corretamente de drizzle-orm no arquivo server/routes.ts.
Como Verificar/Corrigir:
Abra o arquivo server/routes.ts.
V√° para a linha 555 (ou pr√≥ximo dela) e veja a consulta Drizzle.
Se voc√™ estiver tentando fazer uma compara√ß√£o de "n√£o igual", substitua notEq(...) por ne(...).
Certifique-se de que ne (e outros operadores como eq, and, or, etc.) est√£o sendo importados no topo do arquivo, algo como:
TypeScript

import { eq, ne, and, or /* outros operadores */ } from 'drizzle-orm';
Este erro parece ser espec√≠fico de uma rota do painel do vendedor e, embora precise ser corrigido, √© separado do problema do checkout do Stripe.
Erro 2: TypeError: Cannot read properties of undefined (reading 'Symbol(drizzle:Columns)') no Checkout do Stripe
Este √© o erro que estamos tentando resolver h√° mais tempo, e ele ainda est√° ocorrendo quando a fun√ß√£o createCheckoutSession tenta atualizar a tabela stores:

üí• === STRIPE CHECKOUT GLOBAL ERROR (Din√¢mico) === TypeError: Cannot read properties of undefined (reading 'Symbol(drizzle:Columns)')
    ...
    at PgUpdateBuilder.set (/home/runner/workspace/node_modules/src/pg-core/query-builders/update.ts:96:4)
    at createCheckoutSession (/home/runner/workspace/server/controllers/stripe.controller.ts:195:34)
Mesmo ap√≥s voc√™ ter (corretamente) removido as chamadas .nullable() que causavam o erro de inicializa√ß√£o, este erro em tempo de execu√ß√£o persiste. Isso significa que, no momento em que o Drizzle tenta executar db.update(db.stores).set({ ... }), ele ainda n√£o consegue reconhecer uma das colunas que voc√™ est√° tentando definir, com base na defini√ß√£o da tabela stores no seu arquivo schema.ts.

A√ß√µes Cruciais Agora:

Mostre o C√≥digo da Opera√ß√£o de Update no stripe.controller.ts:

Por favor, v√° at√© o arquivo server/controllers/stripe.controller.ts, localize a linha 195 (ou as linhas ao redor que fazem a opera√ß√£o db.update(db.stores).set({...})).
Copie e cole aqui exatamente esse trecho de c√≥digo. Precisamos ver quais campos (chaves) est√£o dentro do objeto que voc√™ est√° passando para o m√©todo set(). Por exemplo:
TypeScript

// Em stripe.controller.ts, dentro de createCheckoutSession
// ...
await db.update(db.stores).set({ 
  stripeCustomerId: newStripeCustomerId,
  // H√Å MAIS ALGUM CAMPO AQUI? Ex: subscriptionStatus: 'active', etc.
}).where(db.eq(db.stores.id, store.id));
// ...
O erro pode estar sendo causado se voc√™ estiver tentando definir um campo no objeto set() que n√£o corresponde exatamente a um nome de propriedade definido no seu schema.ts para a tabela stores, ou se houver algum outro problema sutil ali.
Confirme a Defini√ß√£o ATUAL da Tabela stores no seu schema.ts:

Para termos certeza absoluta de que estamos trabalhando com a vers√£o mais recente e correta do seu schema ap√≥s as √∫ltimas modifica√ß√µes (remo√ß√£o dos .nullable()), por favor, copie e cole aqui apenas a defini√ß√£o export const stores = pgTable("stores", { ... }); do seu arquivo schema.ts atual.
Com esses dois trechos de c√≥digo (o update do controller e a defini√ß√£o da tabela stores do schema), podemos compar√°-los lado a lado e encontrar a inconsist√™ncia que est√° causando o erro Symbol(drizzle:Columns).